{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jean\\\\Scolarite\\\\NUS\\\\SoC\\\\Data_vizualisation\\\\Final_Exam\\\\assignement2-app\\\\src\\\\Components\\\\StackedBarChart.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport data from \"../assets/bar1.json\";\nimport DateSlider2 from \"./DateSlider2\";\nimport \"./StackedBarChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StackedBarPlot({\n  selectedGroups\n}) {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    d3.dsv(\",\", \"/assets/stacked_1.csv\", d => ({\n      group: d.group,\n      Nitrogen: +d.Nitrogen,\n      normal: +d.normal,\n      stress: +d.stress\n    })).then(loadedData => {\n      setData(loadedData);\n    });\n  }, []);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading viz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GraphVisualization, {\n    data: data,\n    selectedGroups: selectedGroups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n}\n_s(StackedBarPlot, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = StackedBarPlot;\nfunction GraphVisualization({\n  data,\n  selectedGroups\n}) {\n  _s2();\n  const width = 1200;\n  const height = 800;\n  const marginTop = 20;\n  const marginRight = 70;\n  const marginBottom = 30;\n  const marginLeft = 40;\n  const barRadius = 10;\n  const [replay, setReplay] = useState(false);\n  const replayAnimation = () => {\n    setReplay(false);\n    setTimeout(() => setReplay(true), 0);\n  };\n  useEffect(() => {\n    d3.select(\"#stacked-container\").select(\"svg\").remove();\n    const svg = d3.select(\"#stacked-container\").append(\"svg\").attr(\"width\", width + marginLeft + marginRight).attr(\"height\", height + marginTop + marginBottom).attr(\"viewBox\", [0, 0, width + marginLeft + marginRight, height + marginTop + marginBottom]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").append(\"g\").attr(\"transform\", `translate(${marginLeft},${marginTop})`);\n    const subgroups = data.columns.slice(1);\n    const groups = data.map(d => d.group);\n    console.log(\"data\", data);\n    const x = d3.scaleBand().domain(groups).range([0, width]).padding([0.2]);\n    const y = d3.scaleLinear().domain([0, d3.max(data, d => {\n      return d3.sum(subgroups, key => +d[key]);\n    })]).nice().range([height, 0]);\n    const xAxis = svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0));\n    xAxis.select(\"path.domain\").attr(\"stroke-dasharray\", width).attr(\"stroke-dashoffset\", width).transition().duration(800).delay(1000).ease(d3.easeCubic).attr(\"stroke-dashoffset\", 0);\n    xAxis.call(g => g.append(\"text\").attr(\"x\", width - 40).attr(\"y\", 5).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(\"Number of recommendations\")).attr(\"font-size\", 2).attr(\"opacity\", 0).transition().delay(1500).duration(800).ease(d3.easeElastic).delay((d, i) => Math.random() * 1000).attr(\"font-size\", 15).attr('opacity', 1).attr(\"font-weight\", \"bold\");\n    const yAxis = svg.append(\"g\")\n    //.attr(\"transform\", `translate(${marginLeft},0)`)\n    .call(d3.axisLeft(y).ticks(height / 40));\n    yAxis.select(\"path.domain\").attr(\"stroke-dasharray\", height).attr(\"stroke-dashoffset\", height).transition().duration(2500).delay(1500).ease(d3.easeCubic).attr(\"stroke-dashoffset\", 0);\n    yAxis.call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(\"Price of the game (in $)\")).attr(\"font-size\", 2).attr(\"opacity\", 0).transition().delay(1500).duration(800).ease(d3.easeElastic).delay((d, i) => Math.random() * 1000).attr(\"font-size\", 15).attr('opacity', 1).attr(\"font-weight\", \"bold\");\n    const categoryColors = {\n      \"Nitrogen\": [\"#ff4d4d\", \"#ff9999\"],\n      // red tones\n      \"normal\": [\"#4da6ff\", \"#99ccff\"],\n      // blue tones\n      \"stress\": [\"#66cc66\", \"#b3e6b3\"],\n      // green tones\n      \"RPG\": [\"#cc99ff\", \"#e6ccff\"],\n      // purple tones\n      \"Strategy\": [\"#ffa64d\", \"#ffd1a3\"],\n      // orange tones\n      \"Simulation\": [\"#ffff66\", \"#ffffb3\"],\n      // yellow tones\n      \"Sports\": [\"#00e6e6\", \"#b3ffff\"],\n      // cyan tones\n      \"Puzzle\": [\"#e6e600\", \"#ffff66\"],\n      // yellow-green\n      \"Racing\": [\"#ff8533\", \"#ffbb99\"],\n      // warm orange\n      \"Shooter\": [\"#990000\", \"#ff6666\"] // dark red\n    };\n    function createGradients(svg) {\n      const defs = svg.append(\"defs\");\n      Object.entries(categoryColors).forEach(([category, [startColor, endColor]]) => {\n        const gradient = defs.append(\"linearGradient\").attr(\"id\", `gradient_${category}`).attr(\"x1\", \"0%\").attr(\"y1\", \"100%\").attr(\"x2\", \"50%\").attr(\"y2\", \"0%\");\n        gradient.append(\"stop\").attr(\"offset\", \"0%\").attr(\"stop-color\", startColor);\n        gradient.append(\"stop\").attr(\"offset\", \"100%\").attr(\"stop-color\", endColor);\n      });\n    }\n\n    // Use this to get the fill style\n    function getGradientUrl(category) {\n      return `url(#gradient_${category})`;\n    }\n    createGradients(svg);\n\n    // Axes\n    /*\r\n    svg.append(\"g\")\r\n        .attr(\"transform\", `translate(0, ${height})`)\r\n        .call(d3.axisBottom(x).tickSizeOuter(0));\r\n      svg.append(\"g\")\r\n        .call(d3.axisLeft(y));\r\n    */\n\n    // Stack the data\n    console.log(\"subgroups\", subgroups);\n    const stackedData = d3.stack().keys(subgroups)(data);\n    console.log(\"stackedData\", stackedData);\n    stackedData.forEach((layer, layerIndex) => {\n      svg.append(\"g\").attr(\"fill\", getGradientUrl(layer.key)).selectAll(\"rect\").data(layer).join(\"rect\").attr(\"x\", d => x(d.data.group)).attr(\"y\", y(0)) // départ depuis le bas (zéro)\n      .attr(\"rx\", barRadius).attr(\"ry\", barRadius).attr(\"height\", 0).attr(\"width\", x.bandwidth()).transition().delay((d, i) => 500 * layerIndex + Math.random() * 300 + 1500).duration(800).attr(\"y\", d => y(d[1])).attr(\"height\", d => y(d[0]) - y(d[1])).ease(d3.easeBackOut);\n    });\n  }, [data, replay, selectedGroups]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: replayAnimation,\n      className: \"replay-button\",\n      children: \"Replay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"stacked-container\",\n      className: \"stacked-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 9\n  }, this);\n}\n_s2(GraphVisualization, \"ozW6Nylr1qu22WubWJxCXhjTDXg=\");\n_c2 = GraphVisualization;\nexport default StackedBarPlot;\nvar _c, _c2;\n$RefreshReg$(_c, \"StackedBarPlot\");\n$RefreshReg$(_c2, \"GraphVisualization\");","map":{"version":3,"names":["useEffect","useState","d3","data","DateSlider2","jsxDEV","_jsxDEV","StackedBarPlot","selectedGroups","_s","setData","dsv","d","group","Nitrogen","normal","stress","then","loadedData","children","fileName","_jsxFileName","lineNumber","columnNumber","GraphVisualization","_c","_s2","width","height","marginTop","marginRight","marginBottom","marginLeft","barRadius","replay","setReplay","replayAnimation","setTimeout","select","remove","svg","append","attr","subgroups","columns","slice","groups","map","console","log","x","scaleBand","domain","range","padding","y","scaleLinear","max","sum","key","nice","xAxis","call","axisBottom","ticks","tickSizeOuter","transition","duration","delay","ease","easeCubic","g","text","easeElastic","i","Math","random","yAxis","axisLeft","categoryColors","createGradients","defs","Object","entries","forEach","category","startColor","endColor","gradient","getGradientUrl","stackedData","stack","keys","layer","layerIndex","selectAll","join","bandwidth","easeBackOut","onClick","className","id","_c2","$RefreshReg$"],"sources":["C:/Jean/Scolarite/NUS/SoC/Data_vizualisation/Final_Exam/assignement2-app/src/Components/StackedBarChart.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport data from \"../assets/bar1.json\";\r\nimport DateSlider2 from \"./DateSlider2\";\r\nimport \"./StackedBarChart.css\";\r\n\r\nfunction StackedBarPlot({ selectedGroups }) {\r\n    const [data, setData] = useState(null);\r\n    useEffect(() => {\r\n      d3.dsv(\",\", \"/assets/stacked_1.csv\", (d) => ({\r\n        group: d.group,\r\n        Nitrogen: +d.Nitrogen,\r\n        normal: +d.normal,\r\n        stress: +d.stress,\r\n      })).then((loadedData) => {\r\n        setData(loadedData);\r\n      });\r\n    }, []);\r\n  \r\n    if (!data) return <p>Loading viz...</p>;\r\n  \r\n    return <GraphVisualization data={data} selectedGroups={selectedGroups}/>;\r\n  }\r\n\r\n  function GraphVisualization({ data, selectedGroups }) {\r\n    const width = 1200;\r\n    const height = 800;\r\n    const marginTop = 20;\r\n    const marginRight = 70;\r\n    const marginBottom = 30;\r\n    const marginLeft = 40;\r\n    const barRadius = 10; \r\n    const [replay, setReplay] = useState(false); \r\n\r\n    const replayAnimation = () => {\r\n        setReplay(false);\r\n        setTimeout(() => setReplay(true), 0); \r\n      };\r\n\r\n    useEffect(() => {\r\n        d3.select(\"#stacked-container\").select(\"svg\").remove();\r\n\r\n        const svg = d3.select(\"#stacked-container\")\r\n            .append(\"svg\")\r\n            .attr(\"width\", width + marginLeft + marginRight)\r\n            .attr(\"height\", height + marginTop + marginBottom)\r\n            .attr(\"viewBox\", [0, 0, width + marginLeft + marginRight, height + marginTop + marginBottom])\r\n            .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\")\r\n            .append(\"g\")\r\n            .attr(\"transform\", `translate(${marginLeft},${marginTop})`);\r\n\r\n        const subgroups = data.columns.slice(1);\r\n\r\n        const groups = data.map(d => d.group);\r\n\r\n        console.log(\"data\", data);\r\n\r\n        const x = d3.scaleBand()\r\n            .domain(groups)\r\n            .range([0, width])\r\n            .padding([0.2]);\r\n\r\n        const y = d3.scaleLinear()\r\n            .domain([0, d3.max(data, d => {\r\n                return d3.sum(subgroups, key => +d[key]);\r\n            })])\r\n            .nice()\r\n            .range([height, 0]);\r\n\r\n        const xAxis = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(0, ${height})`)\r\n            .call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0));\r\n\r\n        xAxis.select(\"path.domain\")\r\n            .attr(\"stroke-dasharray\", width) \r\n            .attr(\"stroke-dashoffset\", width) \r\n            .transition()\r\n            .duration(800)\r\n            .delay(1000)\r\n            .ease(d3.easeCubic)\r\n            .attr(\"stroke-dashoffset\", 0);\r\n\r\n\r\n        xAxis\r\n            .call(g => g.append(\"text\")\r\n                .attr(\"x\", width-40)\r\n                .attr(\"y\", 5)\r\n                .attr(\"fill\", \"currentColor\")\r\n                .attr(\"text-anchor\", \"start\")\r\n                .text(\"Number of recommendations\"))\r\n                .attr(\"font-size\", 2)\r\n                .attr(\"opacity\", 0)\r\n                .transition()\r\n                .delay(1500) \r\n                .duration(800)\r\n                .ease(d3.easeElastic)\r\n                .delay((d, i) => Math.random() * 1000)\r\n                .attr(\"font-size\", 15)\r\n                .attr('opacity', 1)\r\n                .attr(\"font-weight\", \"bold\"); \r\n        \r\n\r\n\r\n        const yAxis = svg.append(\"g\")\r\n            //.attr(\"transform\", `translate(${marginLeft},0)`)\r\n            .call(d3.axisLeft(y).ticks(height / 40));\r\n        \r\n\r\n        yAxis.select(\"path.domain\")\r\n            .attr(\"stroke-dasharray\", height)\r\n            .attr(\"stroke-dashoffset\", height)\r\n            .transition()\r\n            .duration(2500)\r\n            .delay(1500)\r\n            .ease(d3.easeCubic)\r\n            .attr(\"stroke-dashoffset\", 0);\r\n            \r\n        yAxis\r\n            .call(g => g.append(\"text\")\r\n                .attr(\"x\", -marginLeft)\r\n                .attr(\"y\", 10)\r\n                .attr(\"fill\", \"currentColor\")\r\n                .attr(\"text-anchor\", \"start\")\r\n                .text(\"Price of the game (in $)\"))\r\n                .attr(\"font-size\", 2)\r\n                .attr(\"opacity\", 0)\r\n                .transition()\r\n                .delay(1500) \r\n                .duration(800)\r\n                .ease(d3.easeElastic)\r\n                .delay((d, i) => Math.random() * 1000)\r\n                .attr(\"font-size\", 15)\r\n                .attr('opacity', 1)\r\n                .attr(\"font-weight\", \"bold\"); \r\n\r\n        const categoryColors = {\r\n            \"Nitrogen\": [\"#ff4d4d\", \"#ff9999\"],    // red tones\r\n            \"normal\": [\"#4da6ff\", \"#99ccff\"],     // blue tones\r\n            \"stress\": [\"#66cc66\", \"#b3e6b3\"], // green tones\r\n            \"RPG\": [\"#cc99ff\", \"#e6ccff\"],       // purple tones\r\n            \"Strategy\": [\"#ffa64d\", \"#ffd1a3\"],  // orange tones\r\n            \"Simulation\": [\"#ffff66\", \"#ffffb3\"],// yellow tones\r\n            \"Sports\": [\"#00e6e6\", \"#b3ffff\"],    // cyan tones\r\n            \"Puzzle\": [\"#e6e600\", \"#ffff66\"],    // yellow-green\r\n            \"Racing\": [\"#ff8533\", \"#ffbb99\"],    // warm orange\r\n            \"Shooter\": [\"#990000\", \"#ff6666\"]    // dark red\r\n        };\r\n            \r\n        function createGradients(svg) {\r\n            const defs = svg.append(\"defs\");\r\n        \r\n            Object.entries(categoryColors).forEach(([category, [startColor, endColor]]) => {\r\n                const gradient = defs.append(\"linearGradient\")\r\n                    .attr(\"id\", `gradient_${category}`)\r\n                    .attr(\"x1\", \"0%\")\r\n                    .attr(\"y1\", \"100%\")\r\n                    .attr(\"x2\", \"50%\")\r\n                    .attr(\"y2\", \"0%\");\r\n        \r\n                gradient.append(\"stop\")\r\n                    .attr(\"offset\", \"0%\")\r\n                    .attr(\"stop-color\", startColor);\r\n        \r\n                gradient.append(\"stop\")\r\n                    .attr(\"offset\", \"100%\")\r\n                    .attr(\"stop-color\", endColor);\r\n            });\r\n        }\r\n        \r\n        // Use this to get the fill style\r\n        function getGradientUrl(category) {\r\n            return `url(#gradient_${category})`;\r\n        }\r\n\r\n        createGradients(svg); \r\n\r\n        // Axes\r\n        /*\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(0, ${height})`)\r\n            .call(d3.axisBottom(x).tickSizeOuter(0));\r\n\r\n        svg.append(\"g\")\r\n            .call(d3.axisLeft(y));\r\n        */\r\n\r\n        // Stack the data\r\n        console.log(\"subgroups\", subgroups);\r\n        const stackedData = d3.stack()\r\n            .keys(subgroups)(data);\r\n\r\n        console.log(\"stackedData\", stackedData);\r\n\r\n        stackedData.forEach((layer, layerIndex) => {\r\n            svg.append(\"g\")\r\n                .attr(\"fill\", getGradientUrl(layer.key))\r\n                .selectAll(\"rect\")\r\n                .data(layer)\r\n                .join(\"rect\")\r\n                .attr(\"x\", d => x(d.data.group))\r\n                .attr(\"y\", y(0)) // départ depuis le bas (zéro)\r\n                .attr(\"rx\", barRadius)\r\n                .attr(\"ry\", barRadius)\r\n                .attr(\"height\", 0)\r\n                .attr(\"width\", x.bandwidth())\r\n                .transition()\r\n                .delay((d, i) => 500 * layerIndex + Math.random() * 300 + 1500)\r\n                .duration(800)\r\n                .attr(\"y\", d => y(d[1]))\r\n                .attr(\"height\", d => y(d[0]) - y(d[1]))\r\n                .ease(d3.easeBackOut);\r\n        });\r\n\r\n    }, [data, replay, selectedGroups]);\r\n\r\n    return (\r\n        <div>\r\n        <button onClick={replayAnimation} className=\"replay-button\">Replay</button> \r\n        <div id=\"stacked-container\" className=\"stacked-container\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StackedBarPlot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}